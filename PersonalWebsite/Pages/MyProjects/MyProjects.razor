@page "/myprojects"
@using PersonalWebsite.Components
@using PersonalWebsite.Components.GitHubLink
@using PersonalWebsite.Components.TextFormatter
@inherits BaseDataPage<Project>

<PageTitle>Mark J. Hogan - My Projects</PageTitle>

<div class="container">
    <GitHubLink FullURL="@GitHubLinkUrl" />
    <h2>My Projects</h2>

    @if (Items == null)
    {
        <p>Loading projects...</p>
    }
    else
    {
        @foreach (var project in Items)
        {
            <h3>@project.Name</h3>
            <div class="recommendation@(isOdd ? " reverse" : "")">
                <div class="image-container-@(isOdd ? "left" : "right")">
                    <a href="@project.Link" target="_blank" rel="noopener noreferrer" title="View @(project.Name) Repository ...">
                    @{
                        var imagePath = GetImagePath(project.ImageUrl);
                        var hasImage = !string.IsNullOrWhiteSpace(project.ImageUrl);
                        var hasAlt = !string.IsNullOrWhiteSpace(project.ImageAlt);
                        var alignmentClass = $"image-url-{(isOdd ? "left" : "right")}";
                    }

                    @if (hasImage)
                    {
                        <img src="@imagePath" class="rounded-3 @alignmentClass" alt="@(hasAlt ? project.ImageAlt : null)" />
                    }
                    else if (hasAlt)
                    {
                        @project.ImageAlt
                    }
                    else
                    {
                        <span>View Project(s) Repository</span>
                    }
                    </a>
                </div>
                <TextFormatter Content="@project.Description" QuoteText="false" />
                @if (project.Projects != null && project.Projects.Count > 0)
                {
                    <div class="projects-container">
                        <h4>Try these Projects ...</h4>
                        <ul class="project-list">
                            @foreach (var subProject in project.Projects)
                            {
                                <li>
                                    <a href="@subProject.Link" target="_blank" rel="noopener noreferrer" title="Try @(subProject.Name) ...">
                                    @if (string.IsNullOrWhiteSpace(@subProject.ImageUrl))
                                    {
                                        <span>@subProject.Name</span>
                                        <TextFormatter Content="@subProject.Description" QuoteText="false" />
                                    }
                                    else
                                    {
                                        <img src="@GetImagePath(@subProject.ImageUrl)" class="rounded-3 image-url-left-medium" />
                                        <TextFormatter Content="@($"{subProject.Name} - {subProject.Description}")" QuoteText="false" />
                                    }
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
            <br />
            isOdd = !isOdd;
        }
    }
</div>

@code {
    protected override string FilePath => "Pages/MyProjects/MyProjects.razor";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            await LoadDataAsync("data/projects.json");
        }
        catch (ArgumentException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}