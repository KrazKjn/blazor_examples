@page "/problem-solving-profile"
@using PersonalWebsite.Components.GitHubLink
@inherits BaseDataPage<ProblemSolvingStory>

<h2 class="page-title text-center mt-4">üõ†Ô∏è Problem Solving Profile</h2>
<GitHubLink FullURL="@GitHubLinkUrl" />
<p class="lead text-center mb-4">
    From firmware to Freon, refinery to registry‚Äîeach solution reflects practical ingenuity across domains and decades.
</p>

<div class="text-center mb-5">
    <label for="sortOrder" class="me-2 fw-bold">Sort by:</label>
    <select id="sortOrder" @onchange="OnSortOrderChanged">
        <option value="importance">Strategic Importance</option>
        <option value="ascending">Title (A‚ÄìZ)</option>
        <option value="descending">Title (Z‚ÄìA)</option>
    </select>
</div>

@if (sortedStories?.Any() == true)
{
    <div class="row justify-content-center">
        @foreach (var story in sortedStories)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 shadow-sm border-0">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@story.Title</h5>
                        <p><strong>Challenge:</strong> @story.Problem</p>
                        <p><strong>Solution:</strong> @story.Solution</p>
                        <p class="text-muted mt-auto"><em>@story.Lesson</em></p>
                        <div class="mt-2">
                            <small class="text-muted"><strong>Tags:</strong> @string.Join(", ", story.DomainTags)</small>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-center text-muted">Loading stories or no data available...</p>
}
  <iframe src="files/2025 - Resume - Problem Solving Portfolio.pdf" class="pdf-viewer"></iframe>
  <div class="download-link">
    <a class="btn btn-primary" href="files/2025 - Resume - Problem Solving Portfolio.pdf" target="_blank" rel="noopener noreferrer">
      üìÑ Download Problem Solving Portfolio (PDF)
    </a>
  </div>

@code {
    protected override string FilePath => "Pages/ProblemSolvingProfile/ProblemSolvingProfile.razor";
    private List<ProblemSolvingStory> allStories = new();
    private string sortOrder = "importance";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            allStories = await Http.GetFromJsonAsync<List<ProblemSolvingStory>>("data/problemSolvingStories.json")
                         ?? new List<ProblemSolvingStory>();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Failed to load problem-solving stories: {ex.Message}");
        }
    }

    private List<ProblemSolvingStory> sortedStories => sortOrder switch
    {
        "importance" => allStories.OrderBy(s => s.ImportanceRank).ToList(),
        "ascending" => allStories.OrderBy(s => RemoveUnicode(s.Title)).ToList(),
        "descending" => allStories.OrderByDescending(s => RemoveUnicode(s.Title)).ToList(),
        _ => allStories
    };

    private void OnSortOrderChanged(ChangeEventArgs e)
    {
        sortOrder = e.Value?.ToString() ?? "importance";
    }
}
