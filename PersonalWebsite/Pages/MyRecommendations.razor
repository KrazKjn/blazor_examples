@page "/myrecommendations"

@inject HttpClient Http
@inject IJSRuntime JS

<div class="container">
    <h2>What People Say About Me</h2>

    @if (Recommendations == null)
    {
        <p>Loading recommendations...</p>
    }
    else
    {
        <div class="recommendations">
        @foreach (var recommendation in Recommendations)
        {
            <div class="recommendation@(isOdd ? " reverse" : "")">
                <img src="@recommendation.ImageUrl" alt="@recommendation.Author" class="rounded-circle image-url-@(isOdd ? "left" : "right")" />
                <blockquote>
                    <p>"@recommendation.TextBody"</p>
                    <footer>
                        <a href="@recommendation.Link" target="_blank" rel="noopener noreferrer" class="link-@(isOdd ? "left" : "right")">
                            - @recommendation.Author
                        </a>
                    </footer>
                </blockquote>
            </div>
            isOdd = !isOdd;
        }
        </div>
    }
</div>
@code {
    private List<Recommendation>? Recommendations;
    bool isOdd = false;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetStringAsync("data/recommendations.json");
        Recommendations = System.Text.Json.JsonSerializer.Deserialize<List<Recommendation>>(response);
    }
}